#pragma once

#include <common.h>
#include <singleton.h>
#include <math/vector2.h>
#include <SDL.h>

namespace rtech
{
    typedef enum
    {
        RKEY_UNKNOWN = 0,

        RKEY_RETURN = '\r',
        RKEY_ESCAPE = '\033',
        RKEY_BACKSPACE = '\b',
        RKEY_TAB = '\t',
        RKEY_SPACE = ' ',
        RKEY_EXCLAIM = '!',
        RKEY_QUOTEDBL = '"',
        RKEY_HASH = '#',
        RKEY_PERCENT = '%',
        RKEY_DOLLAR = '$',
        RKEY_AMPERSAND = '&',
        RKEY_QUOTE = '\'',
        RKEY_LEFTPAREN = '(',
        RKEY_RIGHTPAREN = ')',
        RKEY_ASTERISK = '*',
        RKEY_PLUS = '+',
        RKEY_COMMA = ',',
        RKEY_MINUS = '-',
        RKEY_PERIOD = '.',
        RKEY_SLASH = '/',
        RKEY_0 = '0',
        RKEY_1 = '1',
        RKEY_2 = '2',
        RKEY_3 = '3',
        RKEY_4 = '4',
        RKEY_5 = '5',
        RKEY_6 = '6',
        RKEY_7 = '7',
        RKEY_8 = '8',
        RKEY_9 = '9',
        RKEY_COLON = ':',
        RKEY_SEMICOLON = ';',
        RKEY_LESS = '<',
        RKEY_EQUALS = '=',
        RKEY_GREATER = '>',
        RKEY_QUESTION = '?',
        RKEY_AT = '@',
        /*
        Skip uppercase letters
        */
        RKEY_LEFTBRACKET = '[',
        RKEY_BACKSLASH = '\\',
        RKEY_RIGHTBRACKET = ']',
        RKEY_CARET = '^',
        RKEY_UNDERSCORE = '_',
        RKEY_BACKQUOTE = '`',
        RKEY_a = 'a',
        RKEY_b = 'b',
        RKEY_c = 'c',
        RKEY_d = 'd',
        RKEY_e = 'e',
        RKEY_f = 'f',
        RKEY_g = 'g',
        RKEY_h = 'h',
        RKEY_i = 'i',
        RKEY_j = 'j',
        RKEY_k = 'k',
        RKEY_l = 'l',
        RKEY_m = 'm',
        RKEY_n = 'n',
        RKEY_o = 'o',
        RKEY_p = 'p',
        RKEY_q = 'q',
        RKEY_r = 'r',
        RKEY_s = 's',
        RKEY_t = 't',
        RKEY_u = 'u',
        RKEY_v = 'v',
        RKEY_w = 'w',
        RKEY_x = 'x',
        RKEY_y = 'y',
        RKEY_z = 'z',

        RKEY_CAPSLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK),

        RKEY_F1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1),
        RKEY_F2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2),
        RKEY_F3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3),
        RKEY_F4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4),
        RKEY_F5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5),
        RKEY_F6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6),
        RKEY_F7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7),
        RKEY_F8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8),
        RKEY_F9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9),
        RKEY_F10 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10),
        RKEY_F11 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11),
        RKEY_F12 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12),

        RKEY_PRINTSCREEN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN),
        RKEY_SCROLLLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK),
        RKEY_PAUSE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE),
        RKEY_INSERT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT),
        RKEY_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME),
        RKEY_PAGEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP),
        RKEY_DELETE = '\177',
        RKEY_END = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_END),
        RKEY_PAGEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN),
        RKEY_RIGHT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT),
        RKEY_LEFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT),
        RKEY_DOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN),
        RKEY_UP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP),

        RKEY_NUMLOCKCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR),
        RKEY_KP_DIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE),
        RKEY_KP_MULTIPLY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY),
        RKEY_KP_MINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS),
        RKEY_KP_PLUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS),
        RKEY_KP_ENTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER),
        RKEY_KP_1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1),
        RKEY_KP_2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2),
        RKEY_KP_3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3),
        RKEY_KP_4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4),
        RKEY_KP_5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5),
        RKEY_KP_6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6),
        RKEY_KP_7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7),
        RKEY_KP_8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8),
        RKEY_KP_9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9),
        RKEY_KP_0 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0),
        RKEY_KP_PERIOD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD),

        RKEY_APPLICATION = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION),
        RKEY_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER),
        RKEY_KP_EQUALS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS),
        RKEY_F13 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13),
        RKEY_F14 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14),
        RKEY_F15 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15),
        RKEY_F16 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16),
        RKEY_F17 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17),
        RKEY_F18 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18),
        RKEY_F19 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19),
        RKEY_F20 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20),
        RKEY_F21 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21),
        RKEY_F22 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22),
        RKEY_F23 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23),
        RKEY_F24 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24),
        RKEY_EXECUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE),
        RKEY_HELP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP),
        RKEY_MENU = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU),
        RKEY_SELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT),
        RKEY_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP),
        RKEY_AGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN),
        RKEY_UNDO = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO),
        RKEY_CUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT),
        RKEY_COPY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY),
        RKEY_PASTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE),
        RKEY_FIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND),
        RKEY_MUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE),
        RKEY_VOLUMEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP),
        RKEY_VOLUMEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN),
        RKEY_KP_COMMA = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA),
        RKEY_KP_EQUALSAS400 =
            SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALSAS400),

        RKEY_ALTERASE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE),
        RKEY_SYSREQ = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ),
        RKEY_CANCEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL),
        RKEY_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR),
        RKEY_PRIOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR),
        RKEY_RETURN2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2),
        RKEY_SEPARATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR),
        RKEY_OUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT),
        RKEY_OPER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER),
        RKEY_CLEARAGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN),
        RKEY_CRSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL),
        RKEY_EXSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL),

        RKEY_KP_00 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00),
        RKEY_KP_000 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000),
        RKEY_THOUSANDSSEPARATOR =
            SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_THOUSANDSSEPARATOR),
        RKEY_DECIMALSEPARATOR =
            SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DECIMALSEPARATOR),
        RKEY_CURRENCYUNIT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT),
        RKEY_CURRENCYSUBUNIT =
            SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYSUBUNIT),
        RKEY_KP_LEFTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN),
        RKEY_KP_RIGHTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN),
        RKEY_KP_LEFTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE),
        RKEY_KP_RIGHTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE),
        RKEY_KP_TAB = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB),
        RKEY_KP_BACKSPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE),
        RKEY_KP_A = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A),
        RKEY_KP_B = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B),
        RKEY_KP_C = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C),
        RKEY_KP_D = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D),
        RKEY_KP_E = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E),
        RKEY_KP_F = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F),
        RKEY_KP_XOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR),
        RKEY_KP_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER),
        RKEY_KP_PERCENT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT),
        RKEY_KP_LESS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS),
        RKEY_KP_GREATER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER),
        RKEY_KP_AMPERSAND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND),
        RKEY_KP_DBLAMPERSAND =
            SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLAMPERSAND),
        RKEY_KP_VERTICALBAR =
            SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_VERTICALBAR),
        RKEY_KP_DBLVERTICALBAR =
            SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLVERTICALBAR),
        RKEY_KP_COLON = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON),
        RKEY_KP_HASH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH),
        RKEY_KP_SPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE),
        RKEY_KP_AT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT),
        RKEY_KP_EXCLAM = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM),
        RKEY_KP_MEMSTORE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE),
        RKEY_KP_MEMRECALL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL),
        RKEY_KP_MEMCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR),
        RKEY_KP_MEMADD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD),
        RKEY_KP_MEMSUBTRACT =
            SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSUBTRACT),
        RKEY_KP_MEMMULTIPLY =
            SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMMULTIPLY),
        RKEY_KP_MEMDIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE),
        RKEY_KP_PLUSMINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS),
        RKEY_KP_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR),
        RKEY_KP_CLEARENTRY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY),
        RKEY_KP_BINARY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY),
        RKEY_KP_OCTAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL),
        RKEY_KP_DECIMAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL),
        RKEY_KP_HEXADECIMAL =
            SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HEXADECIMAL),

        RKEY_LCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL),
        RKEY_LSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT),
        RKEY_LALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT),
        RKEY_LGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI),
        RKEY_RCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL),
        RKEY_RSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT),
        RKEY_RALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT),
        RKEY_RGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI),

        RKEY_MODE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE),

        RKEY_AUDIONEXT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIONEXT),
        RKEY_AUDIOPREV = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPREV),
        RKEY_AUDIOSTOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOSTOP),
        RKEY_AUDIOPLAY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPLAY),
        RKEY_AUDIOMUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOMUTE),
        RKEY_MEDIASELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIASELECT),
        RKEY_WWW = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_WWW),
        RKEY_MAIL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MAIL),
        RKEY_CALCULATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALCULATOR),
        RKEY_COMPUTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COMPUTER),
        RKEY_AC_SEARCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH),
        RKEY_AC_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME),
        RKEY_AC_BACK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK),
        RKEY_AC_FORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD),
        RKEY_AC_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP),
        RKEY_AC_REFRESH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH),
        RKEY_AC_BOOKMARKS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS),

        RKEY_BRIGHTNESSDOWN =
            SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSDOWN),
        RKEY_BRIGHTNESSUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSUP),
        RKEY_DISPLAYSWITCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DISPLAYSWITCH),
        RKEY_KBDILLUMTOGGLE =
            SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMTOGGLE),
        RKEY_KBDILLUMDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMDOWN),
        RKEY_KBDILLUMUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMUP),
        RKEY_EJECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EJECT),
        RKEY_SLEEP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP),
        RKEY_APP1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP1),
        RKEY_APP2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP2),

        RKEY_AUDIOREWIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOREWIND),
        RKEY_AUDIOFASTFORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOFASTFORWARD)
    } RKEY;

    typedef enum
    {
        KMOD_NONE = 0x0000,
        KMOD_LSHIFT = 0x0001,
        KMOD_RSHIFT = 0x0002,
        KMOD_LCTRL = 0x0040,
        KMOD_RCTRL = 0x0080,
        KMOD_LALT = 0x0100,
        KMOD_RALT = 0x0200,
        KMOD_LGUI = 0x0400,
        KMOD_RGUI = 0x0800,
        KMOD_NUM = 0x1000,
        KMOD_CAPS = 0x2000,
        KMOD_MODE = 0x4000,
        KMOD_RESERVED = 0x8000
    } RKEY_MOD;

    typedef enum
    {
        RMOUSE_BUTTON_LEFT = SDL_BUTTON_LEFT,
        RMOUSE_BUTTON_MIDDLE = SDL_BUTTON_MIDDLE,
        RMOUSE_BUTTON_RIGHT = SDL_BUTTON_RIGHT,
        RMOUSE_BUTTON_4 = SDL_BUTTON_X1,
        RMOUSE_BUTTON_5 = SDL_BUTTON_X2
    } RMOUSE_BUTTON;

    
    class API Input : public Singleton<Input>
    {
        template <typename T>
        friend class Singleton;

        protected:
        Input();
        ~Input();

        public:
        void update();
        math::Vector2 getMousePos();
        math::Vector2 getMousePosAbsolute();
        void setMousePos(const math::Vector2& pos);
        void centerMouse();
        void captureMouse(bool enabled);
        void IsKeyDown(RKEY key);
        void IsKeyUp(RKEY key);
        void IsMouseDown(RMOUSE_BUTTON button);
        void IsMouseUp(RMOUSE_BUTTON button);
        void setKeyCallback(const std::function<void(RKEY)> callback);

        private:
        std::function<void(RKEY)> _callback;
    };

    

}